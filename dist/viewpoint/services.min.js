angular.module("vpApi.services",[]).service("$vpApi",["$rootScope","$http","config",function(e,o,t){var n=this,s=t.apiBaseUri;this.username="",this._createDb=function(){n.db.addCollection("user"),n.db.addCollection("formstack"),n.db.addCollection("fsResp"),n.db.addCollection("formResp"),n.db.addCollection("blockResp"),n.db.addCollection("answer"),n.db.save()},this.getUserObj=function(){var e=null;try{e=n.db.getCollection("user").find({username:n.username})[0]}catch(o){console.log("[$vpApi.getUserObj()] Could not find user"),console.log(o)}return e},this.getToken=function(){return user=n.getUserObj(),user.token},this.getFormstack=function(){var e=null,o=n.getUserObj();try{e=n.db.getCollection("formstack").find({slug:o.profile.allowed_formstacks[0]})[0]}catch(t){console.log("[$vpApi.getUserObj()] Could not find formstack"),console.log(t)}return e},this.db=new loki(t.dbFilename),dbJson=localStorage.getItem(t.dbFilename),dbJson?this.db.loadJSON(dbJson):(console.log("[$vpApi] Database not found"),console.log("[$vpApi] creating database "+t.dbFilename),n._createDb());var r=this.db.getCollection("user");r.data.length>0&&r.data[0].username&&(this.username=r.data[0].username),this.authenticate=function(t,r,c){console.log("[$vpApi.authenticate]");var a=s+"authenticate/",i={};o.post(a,t,i).success(function(o,s){var c=n.db.getCollection("user"),a=c.find({username:t.username});0===a.length?c.insert({username:t.username,token:o.token}):(a[0].token=o.token,a[0].username=t.username,c.update(a[0])),n.username=t.username,n.db.save(),console.log("broadcasting authenticated"),e.$broadcast("authenticated"),r(t,s)}).error(function(e,o){c(e,o)})},this.fetch=function(e,t,n,r){var c=s+e+"/",a={headers:{Authorization:"Token "+this.getToken()}};o.get(c,a).success(function(e,o){n(e,o)}).error(function(e,o){r(e,o)})},this.post=function(e,t,n,r){{var c=s+e+"/";({headers:{Authorization:"Token "+this.user.token}})}o({url:c,method:"POST",data:t,headers:{Authorization:"Token "+this.user.token}}).success(function(e,o){n(e,o)}).error(function(e,o){r(e,o)})}}]).service("$user",["$rootScope","$vpApi","$formstack","$profile",function(e,o,t,n){e.$on("authenticated",function(){console.log("received authenticated"),n.fetch(function(){console.log("got profile"),o.db.save();try{var e=o.getUserObj().profile.allowed_formstacks[0]}catch(n){console.log("No allowed formstacks found.")}t.fetchBySlug(e,function(){console.log("[$user] succesfully fetched formstack"),o.db.save()},function(e){console.log("[$user] failed to fetch formstack"),console.log(e)})},function(){console.log("Error fetching profile.")})})}]).service("$profile",["$http","$vpApi","config",function(e,o,t){var n=t.apiBaseUri;this.fetch=function(t,s){var r=n+"account/profile/?user__username=",c=o.getToken(),a={headers:{Authorization:"Token "+c}};e.get(r+o.username,a).success(function(e){console.log("[$profile.fetch() callback] got data");var n=o.getUserObj();n.profile=e[0],o.db.getCollection("user").update(n),t()}).error(function(){s()})}}]).service("$formstack",["$vpApi",function(e){var o=this;this.resource_name="pforms/formstack",this.fetchBySlug=function(t,n,s){HAS_CONNECTION&&e.fetch(this.resource_name,{slug:t},function(s,r){o.objects=s,console.log("[fetchBySlug] got data");var c=e.db.getCollection("formstack"),a=c.find({slug:t});a.length>0&&c.remove(a),c.insert(s[0]),n(s[0],r)},function(e,t){console.log("Failed to fetch "+o.resource_name+". Returned Status: "+t),console.log(e),s(e,t)})}}]).service("$fsResp",["$formstack","$rootScope","$answers",function(e,o){this.resource_name="pforms/formstack-response",o.$on("answer-created",function(){})}]).service("$formResp",["$formstack","$rootScope","$answers",function(e,o){this.resource_name="pforms/form-response",o.$on("answer-created",function(){})}]).service("$blockResponse",["$formstack","$block","$rootScope","$answers","$formResponse",function(e,o,t){this.resource_name="pforms/block-response",t.$on("answer-created",function(){})}]).service("$answers",["$form","$rootScope","$filter","$vpApi","config",function(){this.resource_name="pforms/answer"}]);