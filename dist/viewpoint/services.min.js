angular.module("vpApi.services",[]).service("$vpApi",["$rootScope","$http","config",function(e,o,s){var t=this,r=s.apiBaseUri;this.username="",this.user={},this.users,this.dbLoaded=!1,this.dbinit=function(e){return t.db=data.db,t.user=data.user,t.users=data.db.getCollection("user"),void(t.dbLoaded=!0)},this.getFormstack=function(){var e=null;try{e=t.db.getCollection("formstack").find({slug:t.user.profile.allowed_formstacks[0]})[0]}catch(o){console.log("[$vpApi.getFormstack()] Could not find formstack"),console.log(o)}return e},this.getTimestamp=function(){return(new Date).toISOString()},this.serialize=function(e){var o=[];for(var s in e)e.hasOwnProperty(s)&&o.push(encodeURIComponent(s)+"="+encodeURIComponent(e[s]));return o.join("&")},this.authenticate=function(s,n,c){console.log("[$vpApi.authenticate]");var i=r+"authenticate/",l={};o.post(i,s,l).success(function(o){var r=t.users.find({username:s.username});0===r.length?user=t.users.insert({username:s.username,token:o.token}):(user=r[0],user.token=o.token,user.username=s.username,t.users.update(user)),t.user=user,t.db.save(),localStorage.setItem("user",JSON.stringify(t.user)),console.log("broadcasting authenticated"),e.$broadcast("authenticated",{onSuccess:n})}).error(function(e,o){c(e,o)})},this.fetch=function(e,s,t,n){var c=r+e+"/",i=this.serialize(s);c+="?"+i;var l={headers:{Authorization:"Token "+this.user.token}};o.get(c,l).success(function(e,o){t(e,o)}).error(function(e,o){n(e,o)})},this.post=function(e,s,t,n){{var c=r+e+"/";({headers:{Authorization:"Token "+this.user.token}})}o({url:c,method:"POST",data:s,headers:{Authorization:"Token "+this.user.token}}).success(function(e,o){t(e,o)}).error(function(e,o){n(e,o)})},this.dbinit()}]).service("$user",["$rootScope","$vpApi","$formstack","$profile",function(e,o,s,t){e.$on("authenticated",function(e,r){t.fetch(function(){console.log("[$user] got profile"),o.db.save();try{var e=o.user.profile.allowed_formstacks[0]}catch(t){console.log("No allowed formstacks found.")}s.fetchBySlug(e,function(){console.log("[$user] succesfully fetched formstack"),o.db.save(),r.onSuccess()},function(e){console.log("[$user] failed to fetch formstack"),console.log(e)})},function(){console.log("Error fetching profile.")})})}]).service("$profile",["$http","$vpApi","config",function(e,o,s){var t=s.apiBaseUri;this.fetch=function(s,r){var n=t+"account/info/?user__username=",c=o.user.token,i={headers:{Authorization:"Token "+c}};console.log("[$profile.fetch()] About to fetch profile"),e.get(n+o.user.username,i).success(function(e){console.log("[$profile.fetch() callback] got data"),o.user.profile=e[0],o.users.update(o.user),s()}).error(function(){r()})}}]).service("$formstack",["$vpApi",function(e){var o=this;this.resource_name="pforms/formstack",this.formRepeatItem,this._fetchSuccess=function(s){o.objects=s,console.log("[$formstack.fetchSuccess] got data, now updating formstack collection");var t=e.db.getCollection("formstack"),r=t.find({slug:s[0].slug});r.length>0&&t.remove(r),t.insert(s[0])},this._fetchFail=function(e,s){console.log("Failed to fetch "+o.resource_name+". Returned Status: "+s),console.log(e)},this.fetchBySlug=function(s,t,r){HAS_CONNECTION&&(console.log("[$formstack.fetchBySlug] About to fetch formstack."),e.fetch(this.resource_name,{slug:s},function(r,n){o.objects=r,console.log("[$formstack.fetchBySlug] got data");var c=e.db.getCollection("formstack"),i=c.find({slug:s});i.length>0&&c.remove(i),c.insert(r[0]),t(r[0],n)},function(e,s){console.log("Failed to fetch "+o.resource_name+". Returned Status: "+s),console.log(e),r(e,s)}))},this.updateBySlug=function(s,t,r){console.log("[$formstack.fetchBySlug] About to fetch formstack.");var n={slug:s};e.fetch(this.resource_name,n,function(e,s){o._fetchSuccess(e,s),t(e[0])},function(e,s){o._fetchFail(e,s),r(e,s)})}}]).service("$fsResp",["$vpApi","$rootScope",function(e,o){var s=this;this.resource_name="pforms/formstack-response",o.$on("db_loaded",function(){console.log("$fsResp received db_loaded"),this.objects=e.db.getCollection("fsResp")}),this.delete=function(o){var t=s.objects.get(o);s.objects.remove(t);var r=e.db.getCollection("formResp").find({fsRespId:o}),n=e.db.getCollection("blockResp").find({fsRespId:o}),c=e.db.getCollection("answer").find({fsRespId:o});console.log("Deleting "+r.length+" form responses"),_.each(r,function(o){e.db.getCollection("formResp").remove(o)}),console.log("Deleting "+n.length+" block responses"),_.each(n,function(o){e.db.getCollection("blockResp").remove(o)}),console.log("Deleting "+c.length+" answers"),_.each(c,function(o){e.db.getCollection("answer").remove(o)}),e.db.save()}}]).service("$formResp",["$vpApi",function(){this.resource_name="pforms/form-response"}]).service("$blockResponse",["$formstack","$block","$rootScope","$answers","$formResponse",function(e,o,s){this.resource_name="pforms/block-response",s.$on("answer-created",function(){})}]).service("$answers",["$form","$rootScope","$filter","$vpApi","config",function(){this.resource_name="pforms/answer"}]).service("$mediacache",["$vpApi","$formstack","$http",function(e,o,s){var t=this;t.isCached=!1,this.run=function(){var o=t.getFilenames();_.each(o,function(o){s({method:"GET",withCredentials:!0,url:o}).success(function(s){var t=e.db.getCollection("media"),r=t.find({fname:o});r.length>0?(r.cupdate=e.getTimestamp(),t.update(r)):(r={fname:o,data:s,cupdate:e.getTimestamp()},t.insert(r)),e.db.save()}).error(function(){console.log("Could not load media file ")})})},this.getFilenames=function(){var o=e.getFormstack(),s=[];return _.each(o.forms,function(e){_.each(e.blocks,function(e){_.each(e.questions,function(e){e.options.geojsonChoices&&e.options.geojsonChoices.url&&(console.log("[getFilenames] found media file "+e.options.geojsonChoices.url),s.push(e.options.geojsonChoices.url))})})}),console.log("[getFilenames] File to cache: "),console.log(s),s}}]).service("$tilecache",["$vpApi","$formstack",function(e){var o=this;this.regions=[],this.isCached=function(){var e=localStorage.getItem("tilesCached"),o="true"===e?!0:!1;return o},this.getMaxCacheZoom=function(){var o=e.getFormstack(),s=_.find(o.forms,function(e){return"map-form"===e.options.type});return s?s.options.maxCacheZoom:null},this.getRegions=function(){console.log("[$tilecache.getRegions()] WTF"),out=[];var s=e.getFormstack();return _.each(s.forms,function(e){"map-form"===e.type&&e.options.regions&&(out=_.uniq(out.concat(e.options.regions))),console.log("[$tilecache.getRegions()] Found "+out.length+" regions")}),o.regions=out,out},this.getTileSources=function(){console.log("[$tilecache.getTileSources()] WTF"),out=[];var s=e.getFormstack();return _.each(s.forms,function(e){"map-form"===e.type&&e.options.tileSources&&(out=_.uniq(out.concat(e.options.tileSources))),console.log("[$tilecache.getTileSources()] Found "+out.length+" regions")}),o.tileSources=out,out},this.loadRegions=function(e,s){if(0===o.regions.length)return o.getRegions(),void(0===o.regions.length);var t=o.getMaxCacheZoom(),r=o.offlineLayer.calculateNbTiles(t,o.regions);1e4>r?(console.log("Will be saving: "+r+" tiles"),o.offlineLayer.saveRegions(o.regions,t,function(){console.log("[saveRegions] onStarted")},function(){console.log("[saveRegions] onSuccess"),localStorage.setItem("tilesCached","true"),e()},function(e){console.log("onError"),console.log(e),s()})):alert("You are trying to save "+r+" tiles. There is currently a limit of 10,000 tiles.")},this.run=function(e,s){console.log("[$tilecache.run()]");var t=o.getTileSources()[0];onError=function(e,o,t){console.log("[$tilecache.run.onError()] "),localStorage.setItem("tilesCached","false"),console.log(e),console.log(o),console.log(t),s()};var r=L.map("cache-map").setView([-2.9,-79],13),n={map:r,maxZoom:12,attribution:t.attrib,dbOnly:!0,onReady:function(){console.log("onReady for what?")},onError:function(){console.log("onError for what?")},storeName:t.storeName,dbOption:"WebSQL"};o.offlineLayer=new OfflineLayer(t.url,n),o.loadRegions(e,s)},clearTiles=function(){console.log("clearing tiles..."),o.offlineLayer.clearTiles(function(){console.log("[clearTiles] success")},function(){console.log("[clearTiles] fail")})}}]),angular.module("survey.services",[]).factory("$formUtils",["$vpApi","$location",function($vpApi,$location){var obj=this;return setState=function(scope,state,stateParams){if(scope.current={fsResp:null,form:null,formIndex:null,formResp:null,block:null,blockIndex:null,blockResp:null,qIndex:null},scope.formstack=$vpApi.getFormstack(),scope.fsResps=$vpApi.db.getCollection("fsResp"),scope.formResps=$vpApi.db.getCollection("formResp"),scope.blockResps=$vpApi.db.getCollection("blockResp"),scope.answers=$vpApi.db.getCollection("answer"),scope.medias=$vpApi.db.getCollection("media"),scope.forEach=[],"new"===stateParams.fsRespId?(scope.current.form=scope.formstack.forms[0],scope.current.formIndex=0,scope.current.block=scope.formstack.forms[0].blocks[0],scope.current.blockIndex=0):(scope.current.fsResp=scope.fsResps.get(parseInt(stateParams.fsRespId,10)),scope.current.fsResp||console.error("Could not find Formstack Response: "+stateParams.formRespId)),"app.map-form-foreach"===state.current.name||"app.map-form"===state.current.name){if(console.log("[setState] setting map-from-foreach specific variables here"),scope.repeatCount=0,scope.hash,scope.medias=$vpApi.db.getCollection("media"),stateParams.formRespId="new",scope.selectedFeatures={"type:":"FeatureCollection",features:[]},scope.current.form=_.find(scope.formstack.forms,function(e){return e.id===parseInt(stateParams.formId,10)}),scope.current.block=scope.current.form.blocks[0],stateParams.qIndex=stateParams.qIndex||"intro",scope.current.formRepeatItem,scope.current.formResp&&scope.current.formResp.formRepeatItem&&(scope.current.formRepeatItem=scope.current.formResp.formRepeatItem),scope.current.formIndex=_.indexOf(scope.formstack.forms,scope.current.form),scope.current.blockIndex=_.indexOf(scope.current.form.blocks,scope.current.block),scope.current.form.options.forEach&&scope.current.form.options.forEach.length>0)scope.forEach=eval($form.options.forEach);else if(scope.current.form.options.forEachAnswer&&scope.current.form.options.forEachAnswer.length>0){var ans=_getAnswer(scope,scope.current.form.options.forEachAnswer,scope.current.fsRespId),verbose;scope.forEach=[],_.each(ans.value,function(e){scope.forEach.push({verbose:e,value:e})})}else scope.forEach=[{verbose:"",value:"default"}];scope.mapQuestion=scope.current.block.questions[0],_.each(scope.current.block.questions,function(e){e.form={show:!1}})}else{if("new"===stateParams.formRespId.split("-")[0]){var rs=stateParams.formRespId.split("-");if(2===rs.length){var formId=parseInt(rs[1],10);scope.current.form=_.find(scope.formstack.forms,function(e){return e.id===formId}),scope.current.formIndex=_.indexOf(scope.formstack.forms,scope.current.form)}else{var formId=null;scope.current.form=scope.formstack.forms[0],scope.current.formIndex=0}}else stateParams.formRespId.length<1&&console.error("No formRespId found in the URL"),scope.current.formResp=scope.formResps.get(parseInt(stateParams.formRespId,10)),scope.current.formIndex=scope.current.formResp.formIndex,scope.current.form=scope.formstack.forms[scope.current.formIndex];if("new"===stateParams.blockRespId.split("-")[0]){var rs=stateParams.blockRespId.split("-");if(2===rs.length){var blockId=parseInt(rs[1],10);scope.current.block=_.find(scope.current.form.blocks,function(e){return e.id===blockId}),scope.current.blockIndex=_.indexOf(scope.current.form.blocks,scope.current.block)}else scope.current.block=scope.current.form.blocks[0],scope.current.blockIndex=0}else stateParams.blockRespId.length<1&&console.error("No blockRespId found in the URL"),scope.current.blockResp=scope.blockResps.get(parseInt(stateParams.blockRespId,10)),scope.current.blockIndex=scope.current.blockResp.blockIndex,scope.current.block=scope.current.form.blocks[scope.current.blockIndex]}},_getAnswer=function(e,o,s){s=s||e.current.fsResp.$loki,answers=$vpApi.db.getCollection("answer");var t=$vpApi.db.getCollection("answer").chain().find({questionSlug:o}).find({fsRespId:s}).data();return t.length>1?(console.log("found more than one answer, returns the first one."),console.table(t),t=t[0]):t=1===t.length?t[0]:null,console.log("Found answer: "+t),t},getEligibleBlock=function(direction,form,currentBlockIndex){function findEligibleBlock(direction){return console.log("[findEligibleNextBlock] looking for blockIndex "+currentBlockIndex),block="forward"===direction?blocks[currentBlockIndex+1]:blocks[currentBlockIndex-1],block?"undefined"!=typeof block.options.skipWhen&&(rs=eval(block.options.skipWhen),console.log("answer "),console.log(getAnswer("age")),rs?(console.log("[_getNextBlock()] I need to skip this block and get the next one"),"forward"===direction?currentBlockIndex++:currentBlockIndex--,findEligibleBlock(direction)):console.log("[_getNextBlock()] I can use this block.")):console.log("[_getNextBlock] there are no more blocks on this form"),block}var out,block,rs,blocks=form.blocks;return block=findEligibleBlock(direction)},getEligibleForm=function(direction,currentFormIndex){function findEligibleForm(direction){return console.log("[findNextEligibleForm] looking for formIndex "+currentFormIndex),form="forward"===direction?forms[currentFormIndex+1]:forms[currentFormIndex-1],form?"undefined"!=typeof form.options.skipWhen&&(rs=eval(form.options.skipWhen),rs?(console.log("[_findNextEligibleForm()] I need to skip this form and get the next one"),"forward"===direction?currentFormIndex++:currentFormIndex--,findEligibleForm(direction)):console.log("[_findNextEligibleForm()] I can use this form.")):console.log("[_getNextBlock] there are no more forms on this form"),form}var forms=$vpApi.getFormstack().forms;return form=findEligibleForm(direction)},loadAnswers=function(e,o,s,t){console.log("[$formUtils.loadAnswers()]");var r=!1;s+="",t+="",("new"===o||"new"===s.split("-")[0]||"new"===t.split("-")[0])&&(r=!0),e.previousAnswers=r?[]:e.answers.chain().find({fsRespId:parseInt(o,10)}).find({formRespId:parseInt(s,10)}).find({blockRespId:parseInt(t,10)}).data(),_.each(e.current.block.questions,function(o){var s=_.find(e.previousAnswers,function(e){return e.questionId===o.id});console.log("[loadAnswers] Question: "+o.slug),s?(o.value=s.value,o.previousValue=s.value,o.answerCid=s.$loki):"undefined"!=typeof o.options["default"]?(o.value=o.options["default"],o.previousValue=o.options["default"],o.answerCid=null):(o.value="",o.previousValue="",o.answerCid=null)})},parseHash=function(e){var o;if("intro"===e||"end"===e)return e;var s=e.split("/");return 3===s.length?(formRespId=s[0],blockRespId=s[1],qIndex=parseInt(s[2]),o=[formRespId,blockRespId,qIndex]):o=e,o},{setState:setState,getAnswer:_getAnswer,getEligibleForm:getEligibleForm,getEligibleBlock:getEligibleBlock,loadAnswers:loadAnswers,parseHash:parseHash}}]);