angular.module("vpApi.services",[]).service("$vpApi",["$rootScope","$http","config",function(e,o,t){var s=this,n=t.apiBaseUri;this.username="",this.user={},this.users,this.init=function(){this.db=new loki(t.dbFilename);var e=localStorage.getItem(t.dbFilename);e?this.db.loadJSON(e):(console.log("[$vpApi] Database not found"),console.log("[$vpApi] creating database "+t.dbFilename),s._createDb()),this.users=this.db.getCollection("user"),this.users.data.length>0&&this.users.data[0].username&&(this.user=this.users.data[0])},this._createDb=function(){s.db.addCollection("user"),s.db.addCollection("formstack"),s.db.addCollection("fsResp"),s.db.addCollection("formResp"),s.db.addCollection("blockResp"),s.db.addCollection("answer"),s.db.save()},this.getFormstack=function(){var e=null;try{e=s.db.getCollection("formstack").find({slug:s.user.profile.allowed_formstacks[0]})[0]}catch(o){console.log("[$vpApi.getFormstack()] Could not find formstack"),console.log(o)}return e},this.getTimestamp=function(){return(new Date).toISOString()},this.authenticate=function(t,r,c){console.log("[$vpApi.authenticate]");var i=n+"authenticate/",a={};o.post(i,t,a).success(function(o){var n=s.users.find({username:t.username});0===n.length?n=s.users.insert({username:t.username,token:o.token}):(n[0].token=o.token,n[0].username=t.username,s.users.update(n[0])),s.user=n,s.db.save(),console.log("broadcasting authenticated"),e.$broadcast("authenticated",{onSuccess:r})}).error(function(e,o){c(e,o)})},this.fetch=function(e,t,s,r){var c=n+e+"/",i={headers:{Authorization:"Token "+this.user.token}};o.get(c,i).success(function(e,o){s(e,o)}).error(function(e,o){r(e,o)})},this.post=function(e,t,s,r){{var c=n+e+"/";({headers:{Authorization:"Token "+this.user.token}})}o({url:c,method:"POST",data:t,headers:{Authorization:"Token "+this.user.token}}).success(function(e,o){s(e,o)}).error(function(e,o){r(e,o)})},this.init()}]).service("$user",["$rootScope","$vpApi","$formstack","$profile",function(e,o,t,s){e.$on("authenticated",function(e,n){s.fetch(function(){console.log("[$user] got profile"),o.db.save();try{var e=o.user.profile.allowed_formstacks[0]}catch(s){console.log("No allowed formstacks found.")}t.fetchBySlug(e,function(){console.log("[$user] succesfully fetched formstack"),o.db.save(),n.onSuccess()},function(e){console.log("[$user] failed to fetch formstack"),console.log(e)})},function(){console.log("Error fetching profile.")})})}]).service("$profile",["$http","$vpApi","config",function(e,o,t){var s=t.apiBaseUri;this.fetch=function(t,n){var r=s+"account/profile/?user__username=",c=o.user.token,i={headers:{Authorization:"Token "+c}};console.log("[$profile.fetch()] About to fetch profile"),e.get(r+o.user.username,i).success(function(e){console.log("[$profile.fetch() callback] got data"),o.user.profile=e[0],o.users.update(o.user),t()}).error(function(){n()})}}]).service("$formstack",["$vpApi",function(e){var o=this;this.resource_name="pforms/formstack",this.fetchBySlug=function(t,s,n){HAS_CONNECTION&&(console.log("[$formstack.fetchBySlug] About to fetch formstack."),e.fetch(this.resource_name,{slug:t},function(n,r){o.objects=n,console.log("[$formstack.fetchBySlug] got data");var c=e.db.getCollection("formstack"),i=c.find({slug:t});i.length>0&&c.remove(i),c.insert(n[0]),s(n[0],r)},function(e,t){console.log("Failed to fetch "+o.resource_name+". Returned Status: "+t),console.log(e),n(e,t)}))}}]).service("$fsResp",["$vpApi",function(e){var o=this;this.resource_name="pforms/formstack-response",this.objects=e.db.getCollection("fsResp"),this.objects.all=function(){return this.data},this.delete=function(t){var s=o.objects.get(t);o.objects.remove(s);var n=e.db.getCollection("formResp").find({fsRespId:t}),r=e.db.getCollection("blockResp").find({fsRespId:t}),c=e.db.getCollection("answer").find({fsRespId:t});console.log("Deleting "+n.length+" form responses"),_.each(n,function(o){e.db.getCollection("formResp").remove(o)}),console.log("Deleting "+r.length+" block responses"),_.each(r,function(o){e.db.getCollection("blockResp").remove(o)}),console.log("Deleting "+c.length+" answers"),_.each(c,function(o){e.db.getCollection("answer").remove(o)}),e.db.save()}}]).service("$formResp",["$vpApi",function(e){this.resource_name="pforms/form-response",this.objects=e.db.getCollection("formResp"),this.objects.all=function(){return this.data}}]).service("$blockResponse",["$formstack","$block","$rootScope","$answers","$formResponse",function(e,o,t){this.resource_name="pforms/block-response",t.$on("answer-created",function(){})}]).service("$answers",["$form","$rootScope","$filter","$vpApi","config",function(){this.resource_name="pforms/answer"}]);